// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Example ForecastedHour should render correcty 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  position: relative;
  -webkit-scroll-snap-align: start;
  -moz-scroll-snap-align: start;
  -ms-scroll-snap-align: start;
  scroll-snap-align: start;
  padding: 1.2rem 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #fff;
  font-family: Poppins;
  text-align: center;
}

.c0 h4 {
  font-weight: 400;
}

.c0 h5 {
  font-weight: 500;
}

.c0 p {
  position: absolute;
  z-index: 1;
  font-weight: 700;
  top: 0px;
}

@media (max-width:768px) {
  .c0 {
    border-bottom: 1px solid white;
  }
}

<body>
    <div>
      <div
        class="c0"
      >
        <p>
          31/12
        </p>
        <h4>
          21:00
        </h4>
        <img
          alt="weather"
          height="70"
          src="SvgrURL"
          width="70"
        />
        <h3>
          -273
          °
        </h3>
      </div>
    </div>
  </body>,
  "container": .c0 {
  position: relative;
  -webkit-scroll-snap-align: start;
  -moz-scroll-snap-align: start;
  -ms-scroll-snap-align: start;
  scroll-snap-align: start;
  padding: 1.2rem 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #fff;
  font-family: Poppins;
  text-align: center;
}

.c0 h4 {
  font-weight: 400;
}

.c0 h5 {
  font-weight: 500;
}

.c0 p {
  position: absolute;
  z-index: 1;
  font-weight: 700;
  top: 0px;
}

@media (max-width:768px) {
  .c0 {
    border-bottom: 1px solid white;
  }
}

<div>
    <div
      class="c0"
    >
      <p>
        31/12
      </p>
      <h4>
        21:00
      </h4>
      <img
        alt="weather"
        height="70"
        src="SvgrURL"
        width="70"
      />
      <h3>
        -273
        °
      </h3>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
